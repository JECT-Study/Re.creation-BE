name: Deploy to EC2

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Verify JAR file
        run: |
          echo "=== JAR 파일 검증 ==="
          ls -la build/libs/
          echo "JAR 파일 크기:"
          ls -lh build/libs/*.jar
          echo "JAR 파일 내용:"
          jar -tf build/libs/*.jar | head -20
          echo "JAR 파일 실행 테스트:"
          java -jar build/libs/*.jar --version || echo "JAR 파일 실행 실패"

      - name: Copy JAR file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app/app.jar"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Java 설치 확인 및 설치
            if ! command -v java &> /dev/null; then
              echo "Java 설치 중..."
              sudo apt update
              sudo apt install openjdk-21-jdk -y
            fi

            # 앱 디렉토리 생성
            mkdir -p /home/ubuntu/app
            cd /home/ubuntu/app

            # 디버깅: 파일 존재 여부 확인
            echo "=== 디버깅 정보 ==="
            ls -la
            echo "JAR 파일 크기:"
            ls -lh app.jar || echo "JAR 파일이 없습니다!"
            echo "JAR 파일 타입 확인:"
            file app.jar || echo "파일 타입 확인 실패"
            echo "Java 버전:"
            java -version || echo "Java가 설치되지 않았습니다!"
            echo "JAR 파일 내용 확인:"
            jar -tf app.jar | head -10 || echo "JAR 파일이 손상되었습니다!"
            echo "=================="

            # JAR 파일 직접 실행 테스트
            echo "JAR 파일 직접 실행 테스트:"
            timeout 10s java -jar app.jar --help || echo "JAR 파일 실행 실패"

            # 기존 서비스 중지 (실패해도 무시)
            sudo systemctl stop recreation-app || true

            # 환경변수 파일 작성
            cat > .env << EOF
            SPRING_PROFILES_ACTIVE=prod
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
            KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}
            AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
            EOF

            # JAR 파일 권한 설정
            chmod +x app.jar

            # systemd 서비스 등록
            sudo tee /etc/systemd/system/recreation-app.service > /dev/null << EOF
            [Unit]
            Description=Recreation App
            After=network.target

            [Service]
            Type=simple
            User=ubuntu
            WorkingDirectory=/home/ubuntu/app
            EnvironmentFile=/home/ubuntu/app/.env
            ExecStart=/usr/bin/java -jar app.jar
            Restart=always
            RestartSec=10
            StandardOutput=journal
            StandardError=journal

            [Install]
            WantedBy=multi-user.target
            EOF

            # 서비스 시작
            sudo systemctl daemon-reload
            sudo systemctl enable recreation-app
            sudo systemctl start recreation-app

            # 상태 확인 및 로그 출력
            echo "서비스 상태:"
            sudo systemctl status recreation-app
            echo "최근 로그:"
            sudo journalctl -u recreation-app --no-pager -n 20